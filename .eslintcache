[{"/Users/xx/my doc/WebProject/reactjs/reactProject/src/index.js":"1","/Users/xx/my doc/WebProject/reactjs/reactProject/src/App.js":"2","/Users/xx/my doc/WebProject/reactjs/reactProject/src/reportWebVitals.js":"3","/Users/xx/my doc/WebProject/reactjs/reactProject/src/List.js":"4"},{"size":500,"mtime":1611244880301,"results":"5","hashOfConfig":"6"},{"size":2878,"mtime":1611477375205,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1611244880301,"results":"8","hashOfConfig":"6"},{"size":224,"mtime":1611460174907,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"12c0vwt",{"filePath":"13","messages":"14","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"12"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/Users/xx/my doc/WebProject/reactjs/reactProject/src/index.js",[],["21","22"],"/Users/xx/my doc/WebProject/reactjs/reactProject/src/App.js",["23","24"],"import logo from './logo.svg';\nimport './App.css';\nimport { Component } from 'react';\nimport List from './List';\n\nfunction Clicker(){\n  function handleClikcker(e){\n    alert(\"berhasil diklik\");\n    e.preventDefault()\n  }\n\n  return (\n    <a href='#' onClick={handleClikcker}>Klik</a>\n  )\n}\n\nclass Toggle extends Component {\n  constructor(props){\n    super(props)\n    this.state ={\n      toggleStatus : true\n    }\n\n    this.handleClick = this.handleClick.bind(this)\n  }\n  handleClick(){\n    this.setState(state => ({\n      toggleStatus : !state.toggleStatus\n    }))\n  }\n\n  render(){\n    return(\n      <button onClick={this.handleClick} >\n        {this.state.toggleStatus ? 'ON' : 'OFF'}\n        <p>Lampu {this.state.toggleStatus ? 'lampu nyala' : 'lampu off'}</p>\n      </button>\n    )\n  }\n} \n\nclass Timer extends Component{\n  constructor(props){\n    super(props)\n    this.state = {\n      time : props.start\n    }\n  }\n\n  componentDidMount(){\n    this.addInterval = setInterval( () => this.increase(), 1000);\n  }\n\n  componentWillUnmount(){\n    clearInterval(this.addInterval)\n  }\n\n  increase(){\n    this.setState((state, props) => ({\n      time: parseInt(state.time) + 1\n    }));\n  }\n\n  render(){\n    return (\n      <div> {this.state.time} detik </div>\n    );\n  }\n}\n\nfunction Name(props){\n  return <p>{props.nama}</p>\n}\n\nfunction Umur(props){\n  return <p>{props.umur}</p>\n}\n\nclass Api extends Component{\n  constructor(props){\n    super(props)\n    this.state ={\n      list : []\n    }\n  }\n\n  componentDidMount(){\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n    .then(response => response.json())\n    .then(data =>  this.setState({list : data}))\n  }\n\n  render(){\n    const {list} = this.state\n    return(\n      <div>\n        <ul>\n          {list.map((list, index) => <li key={index}>{list.name}</li>)}\n        </ul>\n      </div>\n    )\n  }\n}\n\n\nclass App extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      todoItem : '',\n      item : []\n    }\n  }\n\n  handleSubimt = (event) => {\n    event.preventDefaul()\n    this.setState({\n    item     :  [...this.state.item, this.state.todoItem],\n    todoItem : ''\n    })\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      todoItem : event.target.value\n    })\n  }\n\n  render(){\n    return(\n      <div>\n        <div className=\"App\">\n          <header className=\"App-header\">\n            \n            <Api/>\n\n            <Toggle/>\n            <form onSubmit={this.handleSubimt}>\n              <input value={this.state.todoItem} onChange={this.handleChange} />\n              <button>add</button>\n            </form>\n            <List item={this.state.item}/>\n\n            <br></br>\n\n          \n\n            <Timer start=\"0\"/>\n            <Name nama=\"ilham\" />\n            <Umur umur=\"24\" />\n            </header>\n            <Clicker/>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","/Users/xx/my doc/WebProject/reactjs/reactProject/src/reportWebVitals.js",[],"/Users/xx/my doc/WebProject/reactjs/reactProject/src/List.js",[],["25","26"],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":1,"column":8,"nodeType":"33","messageId":"34","endLine":1,"endColumn":12},{"ruleId":"35","severity":1,"message":"36","line":13,"column":5,"nodeType":"37","endLine":13,"endColumn":42},{"ruleId":"27","replacedBy":"38"},{"ruleId":"29","replacedBy":"39"},"no-native-reassign",["40"],"no-negated-in-lhs",["41"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["40"],["41"],"no-global-assign","no-unsafe-negation"]